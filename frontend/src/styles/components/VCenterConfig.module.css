/* Optimized VCenterConfig.module.css - Only keeping essential styles */

/* Form container effects */
.formContainer {
  @apply transition-all duration-300;
}

.formContainer:hover {
  @apply transform scale-[1.005] shadow-lg;
}

/* Form field hover effect */
.formField {
  @apply transition-all duration-300;
}

.formField:hover {
  @apply transform scale-[1.01];
}

/* Enhanced input with icon */
.inputWithIcon {
  @apply relative;
}

.inputWithIcon input {
  @apply pl-10;
}

.inputIcon {
  @apply absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400;
}

/* Connect button with gradient and animation */
.connectButton {
  @apply w-full px-4 py-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-lg shadow-md;
  @apply flex items-center justify-center font-medium;
  @apply transition-all duration-300 ease-in-out;
}

.connectButton:hover:not(:disabled) {
  @apply from-blue-700 to-blue-800 shadow-lg -translate-y-0.5;
}

.connectButton:disabled {
  @apply opacity-70 cursor-not-allowed translate-y-0 shadow-md;
}

/* Error container with animation */
.errorContainer {
  @apply min-h-[4.5rem] mb-6 transition-all duration-300;
}

.errorContainerEmpty {
  @apply min-h-0 mb-0 overflow-hidden transition-all duration-300;
}

/* Error alert animation */
.errorAlert {
  @apply bg-red-50 border border-red-300 text-red-700 px-4 py-3 rounded-lg flex items-start;
  @apply shadow-md;
  transform-origin: top;
  animation: slideDown 0.3s ease forwards;
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px) scale(0.98);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Loading state pulse animation */
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

.loadingState {
  animation: pulse 1.5s infinite;
}